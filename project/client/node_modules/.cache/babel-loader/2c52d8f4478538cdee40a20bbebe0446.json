{"ast":null,"code":"import _classCallCheck from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vincentbao/Desktop/react/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderButton = function (stream) {\n      if (stream.userId === _this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          className: \"right floated content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          className: \"ui button negative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Delete\"));\n      }\n    };\n\n    _this.renderCreate = function () {\n      if (_this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"Create Stream\"));\n      }\n    };\n\n    _this.renderList = function () {\n      return _this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, _this.renderButton(stream), React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, stream.title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, stream.description)));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.renderList()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.renderCreate()));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams),\n    isSignedIn: state.auth.isSignedIn,\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/vincentbao/Desktop/react/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","renderButton","stream","userId","props","currentUserId","renderCreate","isSignedIn","renderList","streams","map","id","title","description","Component","mapStateToProps","state","Object","values","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,YAAR,QAA2B,eAA3B;;IAEMC,U;;;;;;;;;;;;;;;;;;UAKFC,Y,GAAe,UAACC,MAAD,EAAY;AACvB,UAAGA,MAAM,CAACC,MAAP,KAAkB,MAAKC,KAAL,CAAWC,aAAhC,EAA8C;AAC1C,eACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CADJ;AAUH;AACJ,K;;UAEDC,Y,GAAe,YAAM;AACjB,UAAG,MAAKF,KAAL,CAAWG,UAAd,EAAyB;AACrB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ;AAOH;AACJ,K;;UAEDC,U,GAAa,YAAM;AACf,aAAO,MAAKJ,KAAL,CAAWK,OAAX,CAAmBC,GAAnB,CAAuB,UAAAR,MAAM,EAAI;AACpC,eACA;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACS,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MAAKV,YAAL,CAAkBC,MAAlB,CADL,EAEI;AAAG,UAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,MAAM,CAACU,KADZ,EAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKV,MAAM,CAACW,WADZ,CAFJ,CAHJ,CADA;AAYH,OAbM,CAAP;AAcH,K;;;;;;;wCA9CoB;AACjB,WAAKT,KAAL,CAAWL,YAAX;AACH;;;6BA8CQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKS,UAAL,EAAjC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,YAAL,EADL,CAHJ,CADJ;AASH;;;;EA3DoBV,KAAK,CAACkB,S;;AA8D/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHP,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,OAApB,CADN;AAEHF,IAAAA,UAAU,EAAES,KAAK,CAACG,IAAN,CAAWZ,UAFpB;AAGHF,IAAAA,aAAa,EAAEW,KAAK,CAACG,IAAN,CAAWhB;AAHvB,GAAP;AAKH,CAND;;AAQA,eAAeN,OAAO,CAACkB,eAAD,EAAkB;AAAChB,EAAAA,YAAY,EAAZA;AAAD,CAAlB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {fetchStreams} from '../../actions';\n\nclass StreamList extends React.Component {\n    componentDidMount () {\n        this.props.fetchStreams();\n    }\n\n    renderButton = (stream) => {\n        if(stream.userId === this.props.currentUserId){\n            return (\n                <div className=\"right floated content\">\n                    <button className=\"ui button primary\">\n                        Edit\n                    </button>\n                    <button className=\"ui button negative\">\n                        Delete\n                    </button>\n                </div>\n            )\n        }\n    }\n\n    renderCreate = () => {\n        if(this.props.isSignedIn){\n            return (\n                <div>\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\n                        Create Stream\n                    </Link>\n                </div>           \n            );\n        }\n    }\n\n    renderList = () => {\n        return this.props.streams.map(stream => {\n            return (\n            <div className=\"item\" key={stream.id}>\n                {this.renderButton(stream)}\n                <i className=\"large middle aligned icon camera\" />\n                <div className=\"content\">\n                    {stream.title}\n                    <div className=\"description\">\n                        {stream.description}\n                    </div>\n                </div>\n            </div>\n            );\n        });\n    }\n\n    render (){\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">{this.renderList()}</div>\n                <div>\n                    {this.renderCreate()}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n        isSignedIn: state.auth.isSignedIn,\n        currentUserId: state.auth.userId\n    };\n}\n\nexport default connect(mapStateToProps, {fetchStreams})(StreamList);"]},"metadata":{},"sourceType":"module"}