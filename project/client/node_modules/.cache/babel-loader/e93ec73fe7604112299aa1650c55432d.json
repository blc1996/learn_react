{"ast":null,"code":"import _classCallCheck from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vincentbao/Desktop/react/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderInput = function (props) {\n      // console.log(props.meta);\n      var className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, props.label), React.createElement(\"input\", Object.assign({}, props.input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })), _this.errorHandle(props.meta));\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"errorHandle\",\n    value: function errorHandle(_ref) {\n      var error = _ref.error,\n          touched = _ref.touched;\n\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 8\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, error));\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(formValues) {\n      console.log(formValues);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.props);\n      return React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title:\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description:\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n\n;\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title!\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description!\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate);","map":{"version":3,"sources":["/Users/vincentbao/Desktop/react/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","renderInput","props","className","meta","error","touched","label","input","errorHandle","formValues","console","log","handleSubmit","onSubmit","Component","validate","errors","title","description","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;IAEMC,Y;;;;;;;;;;;;;;;;;;UAWFC,W,GAAc,UAACC,KAAD,EAAW;AACrB;AACA,UAAMC,SAAS,mBAAYC,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACE,OAAnB,GAA6B,OAA7B,GAAuC,EAAnD,CAAf;AACA,aACI;AAAK,QAAA,SAAS,EAAEH,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQD,KAAK,CAACK,KAAd,CADJ,EAEI,+CAAWL,KAAK,CAACM,KAAjB;AAAwB,QAAA,YAAY,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGK,MAAKC,WAAL,CAAiBP,KAAK,CAACE,IAAvB,CAHL,CADJ;AAOH,K;;;;;;;sCApB+B;AAAA,UAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,UAAVC,OAAU,QAAVA,OAAU;;AAC5B,UAAGA,OAAO,IAAID,KAAd,EAAoB;AAChB,eACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBA,KAAzB,CADJ,CADJ;AAKH;AACJ;;;6BAcQK,U,EAAY;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH;;;6BAES;AACN;AACA,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWW,YAAX,CAAwB,KAAKC,QAA7B,CAAhB;AAAwD,QAAA,SAAS,EAAC,eAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAE,KAAKb,WAApC;AAAiD,QAAA,KAAK,EAAC,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,QAAA,KAAK,EAAC,oBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADJ;AAOH;;;;EApCsBJ,KAAK,CAACkB,S;;AAqChC;;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACN,UAAD,EAAgB;AAC7B,MAAMO,MAAM,GAAG,EAAf;;AACA,MAAG,CAACP,UAAU,CAACQ,KAAf,EAAqB;AACjBD,IAAAA,MAAM,CAACC,KAAP,GAAe,yBAAf;AACH;;AACD,MAAG,CAACR,UAAU,CAACS,WAAf,EAA2B;AACvBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,+BAArB;AACH;;AACD,SAAOF,MAAP;AACH,CATD;;AAWA,eAAelB,SAAS,CAAC;AACrBqB,EAAAA,IAAI,EAAE,cADe;AAErBJ,EAAAA,QAAQ,EAARA;AAFqB,CAAD,CAAT,CAGZhB,YAHY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n    errorHandle ({ error, touched}) {\n        if(touched && error){\n            return (\n                <div className=\"ui error message\" >\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = (props) => {\n        // console.log(props.meta);\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{props.label}</label>\n                <input {...props.input} autoComplete=\"off\" />\n                {this.errorHandle(props.meta)}\n            </div>\n        );\n    }\n\n    onSubmit(formValues) {\n        console.log(formValues);\n    }\n\n    render () {\n        // console.log(this.props);\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\" >\n                <Field name=\"title\" component={this.renderInput} label=\"Enter Title:\"/>\n                <Field name=\"description\" component={this.renderInput} label=\"Enter Description:\" />\n                <button className=\"ui button primary\" >Submit</button>\n            </form>\n        );\n    } \n};\n\nconst validate = (formValues) => {\n    const errors = {};\n    if(!formValues.title){\n        errors.title = \"You must enter a title!\"\n    }\n    if(!formValues.description){\n        errors.description = \"You must enter a description!\"\n    }\n    return errors;\n};\n\nexport default reduxForm({\n    form: 'streamCreate',\n    validate\n})(StreamCreate);"]},"metadata":{},"sourceType":"module"}