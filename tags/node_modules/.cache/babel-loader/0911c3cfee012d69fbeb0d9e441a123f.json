{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vincentbao/Desktop/react/tags/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vincentbao/Desktop/react/tags/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport jasonPlaceholder from '../apis/jasonPlaceholder';\nexport var fetchPosts = function fetchPosts() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return jasonPlaceholder.get('/posts');\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: \"FETCH_POSTS\",\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/vincentbao/Desktop/react/tags/src/actions/index.js"],"names":["jasonPlaceholder","fetchPosts","dispatch","get","response","type","payload","data"],"mappings":";;AAAA,OAAOA,gBAAP,MAA6B,0BAA7B;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACNF,gBAAgB,CAACG,GAAjB,CAAqB,QAArB,CADM;;AAAA;AACvBC,gBAAAA,QADuB;AAG7BF,gBAAAA,QAAQ,CAAC;AACDG,kBAAAA,IAAI,EAAE,aADL;AAEDC,kBAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFjB,iBAAD,CAAR;;AAH6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import jasonPlaceholder from '../apis/jasonPlaceholder';\n\nexport const fetchPosts = () =>  async (dispatch) => {\n    const response = await jasonPlaceholder.get('/posts');\n\n    dispatch({\n            type: \"FETCH_POSTS\",\n            payload: response.data\n    });\n};"]},"metadata":{},"sourceType":"module"}