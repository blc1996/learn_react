{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vincentbao/Desktop/react/tags/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vincentbao/Desktop/react/tags/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _ from 'loadash';\nimport jasonPlaceholder from '../apis/jasonPlaceholder';\nexport var fetchPosts = function fetchPosts() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return jasonPlaceholder.get('/posts');\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: \"FETCH_POSTS\",\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchUser = function fetchUser(userId) {\n  return function (dispatch) {\n    _fetchUser(userId, dispatch);\n  };\n};\n\nvar _fetchUser = _.memorize(\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(userId, dispatch) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return jasonPlaceholder.get(\"/users/\".concat(userId));\n\n          case 2:\n            response = _context2.sent;\n            dispatch({\n              type: 'FETCH_USER',\n              payload: response.data\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function (_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}());","map":{"version":3,"sources":["/Users/vincentbao/Desktop/react/tags/src/actions/index.js"],"names":["_","jasonPlaceholder","fetchPosts","dispatch","get","response","type","payload","data","fetchUser","userId","_fetchUser","memorize"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,SAAd;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACNF,gBAAgB,CAACG,GAAjB,CAAqB,QAArB,CADM;;AAAA;AACvBC,gBAAAA,QADuB;AAG7BF,gBAAAA,QAAQ,CAAC;AACDG,kBAAAA,IAAI,EAAE,aADL;AAEDC,kBAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFjB,iBAAD,CAAR;;AAH6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AASP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD;AAAA,SAAY,UAACP,QAAD,EAAc;AAChDQ,IAAAA,UAAU,CAACD,MAAD,EAASP,QAAT,CAAV;AACF,GAFwB;AAAA,CAAlB;;AAGP,IAAMQ,UAAU,GAAGX,CAAC,CAACY,QAAF;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAY,kBAAOF,MAAP,EAAeP,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJF,gBAAgB,CAACG,GAAjB,kBAA+BM,MAA/B,EADI;;AAAA;AACrBL,YAAAA,QADqB;AAG3BF,YAAAA,QAAQ,CAAC;AACLG,cAAAA,IAAI,EAAE,YADD;AAELC,cAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,aAAD,CAAR;;AAH2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAAA;AAAA;AAAA;AAAA,IAAnB","sourcesContent":["import _ from 'loadash';\nimport jasonPlaceholder from '../apis/jasonPlaceholder';\n\nexport const fetchPosts = () =>  async (dispatch) => {\n    const response = await jasonPlaceholder.get('/posts');\n\n    dispatch({\n            type: \"FETCH_POSTS\",\n            payload: response.data\n    });\n};\n\nexport const fetchUser = (userId) => (dispatch) => {\n   _fetchUser(userId, dispatch);\n};\nconst _fetchUser = _.memorize( async (userId, dispatch) => {\n    const response = await jasonPlaceholder.get(`/users/${userId}`);\n\n    dispatch({\n        type: 'FETCH_USER',\n        payload: response.data\n    });\n});"]},"metadata":{},"sourceType":"module"}