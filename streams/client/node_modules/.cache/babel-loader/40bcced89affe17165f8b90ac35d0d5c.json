{"ast":null,"code":"import _classCallCheck from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vincentbao/Desktop/react/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderList = function () {\n      return _this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, stream.title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, stream.description)), _this.renderButton(stream));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton(stream) {\n      if (stream.userId === this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, \"EDIT/DELETE\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/vincentbao/Desktop/react/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","renderList","props","streams","map","stream","id","title","description","renderButton","userId","currentUserId","Component","mapStateToProps","state","Object","values","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,eAA3B;;IAEMC,U;;;;;;;;;;;;;;;;;;UAaFC,U,GAAa,YAAM;AACf,aAAO,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AACpC,eACA;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,MAAM,CAACE,KADZ,EAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKF,MAAM,CAACG,WADZ,CAFJ,CAFJ,EAQK,MAAKC,YAAL,CAAkBJ,MAAlB,CARL,CADA;AAYH,OAbM,CAAP;AAcH,K;;;;;;;wCA3BoB;AACjB,WAAKH,KAAL,CAAWH,YAAX;AACH;;;iCAEaM,M,EAAQ;AAClB,UAAGA,MAAM,CAACK,MAAP,KAAkB,KAAKR,KAAL,CAAWS,aAAhC,EAA8C;AAC1C,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAGH;AACJ;;;6BAmBQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKV,UAAL,EAAjC,CAFJ,CADJ;AAMH;;;;EArCoBJ,KAAK,CAACe,S;;AAwC/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHX,IAAAA,OAAO,EAAEY,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACX,OAApB,CADN;AAEHQ,IAAAA,aAAa,EAAEG,KAAK,CAACG,IAAN,CAAWP;AAFvB,GAAP;AAIH,CALD;;AAOA,eAAeZ,OAAO,CAACe,eAAD,EAAkB;AAACd,EAAAA,YAAY,EAAZA;AAAD,CAAlB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchStreams} from '../../actions';\n\nclass StreamList extends React.Component {\n    componentDidMount () {\n        this.props.fetchStreams();\n    }\n\n    renderButton (stream) {\n        if(stream.userId === this.props.currentUserId){\n            return (\n                <div>EDIT/DELETE</div>\n            )\n        }\n    }\n\n    renderList = () => {\n        return this.props.streams.map(stream => {\n            return (\n            <div className=\"item\" key={stream.id}>\n                <i className=\"large middle aligned icon camera\" />\n                <div className=\"content\">\n                    {stream.title}\n                    <div className=\"description\">\n                        {stream.description}\n                    </div>\n                </div>\n                {this.renderButton(stream)}\n            </div>\n            );\n        });\n    }\n\n    render (){\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">{this.renderList()}</div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId\n    };\n}\n\nexport default connect(mapStateToProps, {fetchStreams})(StreamList);"]},"metadata":{},"sourceType":"module"}