{"ast":null,"code":"import _classCallCheck from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vincentbao/Desktop/react/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vincentbao/Desktop/react/streams/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { editStream } from '../../actions';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    _classCallCheck(this, StreamEdit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamEdit).apply(this, arguments));\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"StreamEdit\");\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title!\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description!\";\n  }\n\n  return errors;\n};\n\nvar formWrapped = reduxForm({\n  form: 'streamEdit',\n  validate: validate\n})(StreamEdit);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  StreamEdit: StreamEdit\n})(formWrapped);","map":{"version":3,"sources":["/Users/vincentbao/Desktop/react/streams/client/src/components/streams/StreamEdit.js"],"names":["React","Field","reduxForm","connect","editStream","StreamEdit","Component","validate","formValues","errors","title","description","formWrapped","form","mapStateToProps","state","userId","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,eAAzB;;IAGMC,U;;;;;;;;;;;;;6BAEQ;AACN,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH;;;;EANoBL,KAAK,CAACM,S;;AAS/B,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD,EAAgB;AAC7B,MAAMC,MAAM,GAAG,EAAf;;AACA,MAAG,CAACD,UAAU,CAACE,KAAf,EAAqB;AACjBD,IAAAA,MAAM,CAACC,KAAP,GAAe,yBAAf;AACH;;AACD,MAAG,CAACF,UAAU,CAACG,WAAf,EAA2B;AACvBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,+BAArB;AACH;;AACD,SAAOF,MAAP;AACH,CATD;;AAWA,IAAMG,WAAW,GAAGV,SAAS,CAAC;AAC1BW,EAAAA,IAAI,EAAE,YADoB;AAE1BN,EAAAA,QAAQ,EAARA;AAF0B,CAAD,CAAT,CAGjBF,UAHiB,CAApB;;AAKA,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AAACC,IAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AAApB,GAAP;AACH,CAFD;;AAIA,eAAeb,OAAO,CAACW,eAAD,EAAkB;AAACT,EAAAA,UAAU,EAAVA;AAAD,CAAlB,CAAP,CAAuCO,WAAvC,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport {editStream} from '../../actions';\n\n\nclass StreamEdit extends React.Component {\n\n    render () {\n        return (\n            <div>StreamEdit</div>\n        );\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n    if(!formValues.title){\n        errors.title = \"You must enter a title!\"\n    }\n    if(!formValues.description){\n        errors.description = \"You must enter a description!\"\n    }\n    return errors;\n};\n\nconst formWrapped = reduxForm({\n    form: 'streamEdit',\n    validate\n})(StreamEdit);\n\nconst mapStateToProps = state => {\n    return {userId: state.auth.userId};\n}\n\nexport default connect(mapStateToProps, {StreamEdit})(formWrapped);"]},"metadata":{},"sourceType":"module"}